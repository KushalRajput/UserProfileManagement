{"version":3,"sources":["./src/app/admin/admin-routing.module.ts","./src/app/admin/add-user/add-user.component.ts","./src/app/admin/add-user/add-user.component.html","./src/app/admin/admin.module.ts","./src/app/admin/dashboard/dashboard.component.ts","./src/app/admin/dashboard/dashboard.component.html"],"names":[],"mappings":";;;;;;;;;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuD;AACU;AACI;;;AAErE,MAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,iFAAkB,EAAE;IAC3C,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,6EAAgB,EAAE;IACjD,EAAE,IAAI,EAAE,cAAc,EAAE,SAAS,EAAE,6EAAgB,EAAE;CAEtD,CAAC;AAMK,MAAM,kBAAkB;;oFAAlB,kBAAkB;iGAAlB,kBAAkB;qGAHpB,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,EAC9B,4DAAY;mIAEX,kBAAkB,uFAFnB,4DAAY;;;;;;;;;;;;;ACbxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+E;;;;;;;ICWnD,sEAAiD;IAAA,4EAAiB;IAAA,4DAAM;;;IAD5E,0EAAiE;IAC7D,oHAAwE;IAC5E,4DAAM;;;IADI,0DAAyC;IAAzC,mHAAyC;;;;IAenD,0EAAgE;IAAxB,oTAAuB;IAAC,qEACzB;IAAA,4DAAM;;;;IAC7C,0EAA+D;IAAxB,qTAAuB;IAAC,qEACvB;IAAA,4DAAM;;;IAG1C,sEAAqD;IAAA,gFAAqB;IAAA,4DAAM;;;IADpF,0EAAqE;IACjE,oHAAgF;IACpF,4DAAM;;;IADI,0DAA6C;IAA7C,uHAA6C;;;IAkBnD,sEAAkD;IAAA,6EAAkB;IAAA,4DAAM;;;IAC1E,sEAA+C;IAAA,8EAAmB;IAAA,4DAAM;;;IAF5E,0EAAkE;IAC9D,oHAA0E;IAC1E,oHAAwE;IAC5E,4DAAM;;;IAFI,0DAA0C;IAA1C,oHAA0C;IAC1C,0DAAuC;IAAvC,iHAAuC;;;;;IAMrD,0EAC8E;IAC1E,0EAAmC;IAC/B,0EAA0B;IACtB,2EAC+E;IAAA,oEAC/E;IAAA,4DAAQ;IACR,2EAA4C;IAA7B,2VAA4B;IAAC,4DAAC;IAAA,4DAAO;IACxD,4DAAM;IAEN,uEAA0F;IAC9F,4DAAM;IACV,4DAAM;;;;;IAVY,0DAAoB;IAApB,iFAAoB;IAGtB,0DAA0E;IAA1E,8LAA0E;;ADrDvG,MAAM,gBAAgB;IAM3B,YAAoB,MAAc,EAAU,OAAwB,EAAU,KAAqB,EAAU,EAAe;QAAxG,WAAM,GAAN,MAAM,CAAQ;QAAU,YAAO,GAAP,OAAO,CAAiB;QAAU,UAAK,GAAL,KAAK,CAAgB;QAAU,OAAE,GAAF,EAAE,CAAa;QAJ5H,cAAS,GAAY,KAAK;QAE1B,aAAQ,GAAY,KAAK;QACzB,eAAU,GAAU,QAAQ;QAE1B,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC3B,IAAI,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC/B,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,KAAK,EAAE,yDAAU,CAAC,OAAO,CAAC,wCAAwC,CAAC,CAAC,CAAC;YAClH,MAAM,EAAE,EAAE;YACV,KAAK,EAAE,EAAE;YACT,QAAQ,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACnC,SAAS,EAAE,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;gBACvB,IAAI,CAAC,WAAW,EAAE;aACnB,CAAC;SACH,CAAC,CAAC;IACL,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE;QACvC,IAAI,IAAI,CAAC,EAAE,EAAE;YACX,IAAI,CAAC,UAAU,GAAG,QAAQ;YAC1B,IAAI,CAAC,kBAAkB,EAAE;SAC1B;IACH,CAAC;IAED,WAAW;QACT,OAAO,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACnB,UAAU,EAAE,EAAE;SACf,CAAC,CAAC;IACL,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,SAAS,GAAG,KAAK;QACtB,MAAM,OAAO,GAAc,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;QAC9D,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC;IACnC,CAAC;IAGD,IAAI,CAAC,KAAK,OAAO,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC;IAEzC,IAAI;QACF,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,QAAQ,CAAC;IACrC,CAAC;IAED,kBAAkB;QAChB,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,mBAAmB,EAAE,EAAE,OAAO,EAAE,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE;YACjF,IAAI,IAAI,CAAC,UAAU,CAAC,CAAC,WAAW,CAAC,CAAC,MAAM,GAAG,CAAC,EAAE;gBAC5C,KAAK,IAAI,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,WAAW,CAAC,CAAC,MAAM,GAAG,CAAC,EAAE,KAAK,EAAE,EAAE;oBAC7E,IAAI,CAAC,QAAQ,EAAE;iBAChB;aACF;YACD,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAC3C,CAAC,CAAC;IACJ,CAAC;IAED,IAAI,SAAS;QACX,OAAO,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,WAAW,CAAc;IACnD,CAAC;IAED,MAAM;QACJ,IAAI,CAAC,SAAS,GAAG,IAAI;QACrB,IAAI,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE;YACxB,OAAO;SACR;QACD,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC;IACtC,CAAC;IAED,cAAc,CAAC,KAAK;QAClB,IAAI,OAAO,GAAc,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;QAC5D,IAAI,OAAO,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC;YAAE,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;IACxD,CAAC;IAED,WAAW;QACT,IAAI,CAAC,GAAG,QAAQ,CAAC,cAAc,CAAC,UAAU,CAAC;QAC3C,IAAI,IAAI,CAAC,QAAQ,EAAE;YACjB,CAAC,CAAC,YAAY,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC;YAAC,IAAI,CAAC,QAAQ,GAAG,KAAK;SAC1D;aACI;YACH,CAAC,CAAC,YAAY,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;YAAC,IAAI,CAAC,QAAQ,GAAG,IAAI;SACrD;IACH,CAAC;IAED,WAAW,CAAC,MAAM;QAChB,IAAI,IAAI,GAAG;YACT,IAAI,EAAE,MAAM,CAAC,IAAI;YACjB,KAAK,EAAE,MAAM,CAAC,KAAK;YACnB,MAAM,EAAE,MAAM,CAAC,MAAM;YACrB,KAAK,EAAE,MAAM,CAAC,KAAK;YACnB,QAAQ,EAAE,MAAM,CAAC,QAAQ;YACzB,SAAS,EAAE,MAAM,CAAC,SAAS;YAC3B,OAAO,EAAE,IAAI,CAAC,EAAE;SACjB;QACD,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,2BAA2B,EAAE,IAAI,CAAC,CAAC,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE;YACzE,IAAI,IAAI,CAAC,aAAa,CAAC,IAAI,GAAG,EAAE;gBAC9B,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,SAAS,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;gBAChD,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,QAAQ,CAAC;aACpC;QACH,CAAC,EAAE,GAAG,CAAC,EAAE;YACP,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,OAAO,EAAE,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC;QAClD,CAAC,CAAC;IACJ,CAAC;;gFAtGU,gBAAgB;gGAAhB,gBAAgB;QCV7B,yEAAoC;QAChC,wEAAwD;QAAC,wEAAY;QAAA,4DAAK;QAE1E,yEAAmD;QAC/C,0EAA4B;QACxB,yEAAiB;QACb,yEAAsB;QAClB,yEAAwB;QACpB,2EACkE;QAAA,+DAAI;QAAA,4DAAQ;QAC9E,uEAAkF;QAClF,8GAEM;QACV,4DAAM;QAEN,0EAAwB;QACpB,4EACoE;QAAA,kEAAM;QAAA,4DAAQ;QAClF,wEAAsF;QAC1F,4DAAM;QAEN,0EAAwB;QACpB,4EACsE;QAAA,oEAAQ;QAAA,4DAAQ;QACtF,wEACoC;QACpC,+GAC6C;QAC7C,+GAC8C;QAE9C,8GAEM;QACV,4DAAM;QACV,4DAAM;QACN,0EAAsB;QAGlB,0EAAwB;QACpB,4EACmE;QAAA,iEAAK;QAAA,4DAAQ;QAChF,wEAAoF;QACxF,4DAAM;QAEN,0EAAwB;QACpB,4EACmE;QAAA,iEAAK;QAAA,4DAAQ;QAChF,wEAA6F;QAC7F,8GAGM;QACV,4DAAM;QACN,2EAAkB;QAAA,8EAAqD;QAA7C,yIAAS,cAAU,IAAC;QAAyB,wEACvD;QAAA,4DAAS;QACzB,4DAAM;QACN,+GAYM;QAGV,4DAAM;QAEV,4DAAM;QACV,4DAAO;QAEX,4DAAM;QACN,2EAA+C;QAC3C,uEAAK;QAAA,8EAAqD;QAAjB,yIAAS,UAAM,IAAC;QAAC,gEAAI;QAAA,4DAAS;QAAA,4DAAM;QAC7E,uEAAK;QAAA,8EAAqE;QAAnB,yIAAS,YAAQ,IAAC;QAAC,wDAAc;QAAA,4DAAS;QAAA,4DAAM;QAC3G,4DAAM;QACV,4DAAM;;QA/EQ,0DAAqB;QAArB,kFAAqB;QAKP,0DAA6D;QAA7D,+KAA6D;QAE3D,0DAAgC;QAAhC,oGAAgC;QAOlC,0DAA+D;QAA/D,iLAA+D;QAM/D,0DAAiE;QAAjE,mLAAiE;QAG9C,0DAAe;QAAf,+EAAe;QAEf,0DAAc;QAAd,8EAAc;QAG/B,0DAAoC;QAApC,wGAAoC;QAUtC,0DAA8D;QAA9D,gLAA8D;QAM9D,0DAA8D;QAA9D,gLAA8D;QAE5D,0DAAiC;QAAjC,qGAAiC;QASzB,0DAA8C;QAA9C,kHAA8C;QAsBF,0DAAc;QAAd,+EAAc;;;;;;;;;;;;;;AChFhG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+C;AAEa;AACS;AACb;AACS;AAEC;;AAc3D,MAAM,WAAW;;sEAAX,WAAW;0FAAX,WAAW;8FAPb;YACP,4DAAY;YACZ,wEAAkB;YAClB,mEAAkB;YAClB,0DAAW,EAAE,kEAAmB;SACjC;mIAEU,WAAW,mBAVpB,iFAAkB;QAClB,6EAAgB,aAGhB,4DAAY;QACZ,wEAAkB;QAClB,mEAAkB;QAClB,0DAAW,EAAE,kEAAmB;;;;;;;;;;;;;AChBpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2D;AACV;AACY;;;;;;;;;;;ICS7C,yEAAsD;IAAC,+DAAG;IAAA,4DAAK;;;IAC/D,yEAAuD;IAAC,uDAAY;IAAA,4DAAK;;;IAAjB,0DAAY;IAAZ,uFAAY;;;IAIpE,yEAAsD;IAAC,iEAAK;IAAA,4DAAK;;;IACjE,yEAAmC;IAAC,uDAAa;IAAA,4DAAK;;;IAAlB,0DAAa;IAAb,wFAAa;;;IAIjD,yEAAsD;IAAC,kEAAM;IAAA,4DAAK;;;IAClE,yEAAmC;IAAC,uDAAa;IAAA,4DAAK;;;IAAlB,0DAAa;IAAb,wFAAa;;;IAIjD,yEAAsD;IAAC,mEAAO;IAAA,4DAAK;;;IACnE,yEAAmC;IAAC,uDAAe;IAAA,4DAAK;;;IAApB,0DAAe;IAAf,0FAAe;;;IAIrD,yEAAsD;IAAC,sEAAU;IAAA,4DAAK;;;IACtE,yEAAmC;IAAC,uDAAqB;IAAA,4DAAK;;;IAA1B,0DAAqB;IAArB,gGAAqB;;;IAIvD,yEAAsD;IAAC,mEAAO;IAAA,4DAAK;;;;IACnE,yEAAuC;IACrC,6EAAuH;IAEvH,mEAAmD;IACrD,4DAAS;IACT,qFAA0B;IACxB,6EAAwD;IAAlC,uYAAgC;IACpD,uEAAO;IAAA,oEAAS;IAAA,4DAAO;IACzB,4DAAS;IACT,6EAA0D;IAApC,yYAAkC;IACtD,uEAAO;IAAA,uEAAW;IAAA,4DAAO;IAC3B,4DAAS;IACX,4DAAW;IACX,4DAAK;;;IAZsB,0DAA0B;IAA1B,mFAA0B;;;IAezD,oEAA4D;;;IAC5D,oEAAkE;;;IAGlE,yEAAkC;IAC9B,yEAAiC;IAAA,wEAAa;IAAA,4DAAK;IACvD,4DAAK;;;AD/CjB;;GAEG;AAOI,MAAM,kBAAkB;IAO7B,YAAoB,OAAwB,EAAU,MAAc;QAAhD,YAAO,GAAP,OAAO,CAAiB;QAAU,WAAM,GAAN,MAAM,CAAQ;QANpE,qBAAgB,GAAa,CAAC,IAAI,EAAE,MAAM,EAAE,OAAO,EAAE,QAAQ,EAAE,UAAU,EAAE,QAAQ,CAAC,CAAC;QAErF,UAAK,GAAG,EAAE;IAI8D,CAAC;IAEzE,QAAQ;QACN,IAAI,CAAC,WAAW,EAAE;IACpB,CAAC;IAED,OAAO;QACL,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,iBAAiB,CAAC;IAC9C,CAAC;IAED,QAAQ,CAAC,EAAE;QACT,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,mBAAmB,EAAE,EAAE,CAAC;IACpD,CAAC;IAED,WAAW;QACT,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,mBAAmB,CAAC,CAAC,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE;YAC1D,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC;YAC7B,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,EAAC,EAAE;gBACpB,GAAG,CAAC,cAAc,CAAC,GAAG,EAAE;gBACxB,IAAG,GAAG,CAAC,WAAW,CAAC,IAAI,GAAG,CAAC,WAAW,CAAC,CAAC,MAAM,GAAG,CAAC,EAAC;oBACjD,GAAG,CAAC,WAAW,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,EAAC,EAAE;wBAC3B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;wBAC9B,GAAG,CAAC,cAAc,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;oBAC5C,CAAC,CAAC;iBACH;YACH,CAAC,CAAC;YACF,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAExB,IAAI,CAAC,UAAU,GAAG,IAAI,0EAAkB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAErD,UAAU,CAAC,GAAG,EAAE;gBACd,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;gBAC3C,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;YACnC,CAAC,EAAE,GAAG,CAAC,CAAC;QACV,CAAC,CAAC;IACJ,CAAC;IAED,UAAU,CAAC,OAAO,EAAE,KAAK;QACvB,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,kBAAkB,EAAE,EAAE,OAAO,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE;YACvE,IAAI,IAAI,CAAC,aAAa,CAAC,IAAI,GAAG,EAAE;gBAC9B,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,SAAS,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;gBAChD,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC;gBAC3B,IAAI,CAAC,UAAU,GAAG,IAAI,0EAAkB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBAErD,UAAU,CAAC,GAAG,EAAE;oBACd,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;oBAC3C,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;gBACnC,CAAC,EAAE,GAAG,CAAC,CAAC;aACT;QACH,CAAC,EAAE,GAAG,CAAC,EAAE;YACP,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,OAAO,EAAE,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC;QAClD,CAAC,CAAC;IACJ,CAAC;IAED,WAAW,CAAC,KAAY;QACtB,MAAM,WAAW,GAAI,KAAK,CAAC,MAA2B,CAAC,KAAK,CAAC;QAC7D,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,WAAW,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;QAE1D,IAAI,IAAI,CAAC,UAAU,CAAC,SAAS,EAAE;YAC7B,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,SAAS,EAAE,CAAC;SACvC;IACH,CAAC;IAED,MAAM;QACJ,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,SAAS,EAAE,4BAA4B,CAAC;QAC7D,YAAY,CAAC,OAAO,CAAC,UAAU,EAAE,IAAI,CAAC;QACtC,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,GAAG,CAAC;IAChC,CAAC;;oFA1EU,kBAAkB;kGAAlB,kBAAkB;kEAIlB,wEAAY;kEACZ,8DAAO;;;;;;QC5BpB,yEAA4B;QAC1B,wEAAuC;QAAA,wEAAa;QAAA,4DAAK;QAEvD,4EAA8D;QAApB,0IAAS,aAAS,IAAC;QAAC,mEAAQ;QAAA,4DAAS;QAC/E,oFAAsC;QAClC,4EAAW;QAAA,iEAAM;QAAA,4DAAY;QAC7B,8EAAoE;QAApD,+IAAS,uBAAmB,IAAC;QAA7C,4DAAoE;QACxE,4DAAiB;QAEjB,0EAAyD;QACrD,4EAAmD;QAE/C,4EAA4C;QACxC,8GAA+D;QAC/D,+GAAyE;QAC7E,qEAAe;QAEf,6EAA8C;QAC1C,8GAAiE;QACjE,+GAAsD;QAC1D,qEAAe;QAEf,6EAA+C;QAC3C,8GAAkE;QAClE,+GAAsD;QAC1D,qEAAe;QAEf,6EAAoC;QAChC,8GAAmE;QACnE,+GAAwD;QAC5D,qEAAe;QAEf,6EAAsC;QACpC,8GAAsE;QACtE,+GAA8D;QAClE,qEAAe;QAEb,6EAAoC;QAChC,+GAAmE;QACnE,gHAaK;QACP,qEAAe;QAEjB,+GAA4D;QAC5D,+GAAkE;QAGlE,+GAEK;QACT,4DAAQ;QAER,gFACgB;QACpB,4DAAM;QAEN,8EAAwD;QAAnB,2IAAS,YAAQ,IAAC;QAAE,oEAAO;QAAA,4DAAS;QAC7E,4DAAM;;QA3DmB,2DAAyB;QAAzB,sFAAyB;QA6ClB,2DAAiC;QAAjC,iGAAiC;QACpB,0DAA0B;QAA1B,kGAA0B;QAQhD,0DAAoC;QAApC,kJAAoC","file":"admin-admin-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AddUserComponent } from './add-user/add-user.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\n\nconst routes: Routes = [\n  { path: '', component: DashboardComponent },\n  { path: 'add-user', component: AddUserComponent },\n  { path: 'add-user/:id', component: AddUserComponent }\n\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AdminRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, Validators, FormBuilder, FormArray } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ServicesService } from 'src/app/service/services.service';\n\n@Component({\n  selector: 'app-add-user',\n  templateUrl: './add-user.component.html',\n  styleUrls: ['./add-user.component.scss']\n})\nexport class AddUserComponent implements OnInit {\n  addUser: FormGroup;\n  submitted: boolean = false\n  id: string\n  showpass: boolean = false\n  buttonName:string = 'Submit'\n  constructor(private router: Router, private service: ServicesService, private route: ActivatedRoute, private fb: FormBuilder) {\n    this.addUser = this.fb.group({\n      name: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email, Validators.pattern('[a-z0-9._%+-]+@[a-z0-9.-]+.[a-z]{2,3}$')]],\n      gender: '',\n      about: '',\n      password: ['', Validators.required],\n      strengths: this.fb.array([\n        this.addnewBlock()\n      ])\n    });\n  }\n\n  ngOnInit() {\n    this.id = this.route.snapshot.params.id\n    if (this.id) {\n      this.buttonName = 'Update'\n      this.getAndPatchDetails()\n    }\n  }\n\n  addnewBlock() {    \n    return this.fb.group({\n      'strength': ''\n    });\n  }\n\n  addBlock() {\n    this.submitted = false\n    const control = <FormArray>this.addUser.controls['strengths'];\n    control.push(this.addnewBlock());\n  }\n\n\n  get f() { return this.addUser.controls; }\n\n  back() {\n    this.router.navigateByUrl('/admin')\n  }\n\n  getAndPatchDetails() {\n    this.service.PostReq('admin/getUserById', { user_id: this.id }).subscribe((data) => {\n      if (data['response']['strengths'].length > 1) {\n        for (let index = 0; index < data['response']['strengths'].length - 1; index++) {\n          this.addBlock()\n        }\n      }\n      this.addUser.patchValue(data['response'])\n    })\n  }\n\n  get strengths(): FormArray {\n    return this.addUser.get(\"strengths\") as FormArray\n  }\n\n  submit() {\n    this.submitted = true\n    if (this.addUser.invalid) {\n      return;\n    }\n    this.saveDetails(this.addUser.value)\n  }\n\n  removeStrength(index) {\n    let control = <FormArray>this.addUser.controls['strengths'];\n    if (control.value.length > 1) control.removeAt(index);\n  }\n\n  shownewPass() {\n    let x = document.getElementById('password')\n    if (this.showpass) {\n      x.setAttribute(\"type\", \"password\"); this.showpass = false\n    }\n    else {\n      x.setAttribute(\"type\", \"text\"); this.showpass = true\n    }\n  }\n\n  saveDetails(values) {\n    let data = {\n      name: values.name,\n      email: values.email,\n      gender: values.gender,\n      about: values.about,\n      password: values.password,\n      strengths: values.strengths,\n      user_id: this.id\n    }\n    this.service.PostReq('admin/createAndUpdateUser', data).subscribe((data) => {\n      if (data['status_code'] == 200) {\n        this.service.toaster('success', data['message'])\n        this.router.navigateByUrl(`/admin`)\n      }\n    }, err => {\n      this.service.toaster('error', err.error.message)\n    })\n  }\n}\n","<div class=\"setting_item container\">\n    <h1 class=\"text-blue font-weight-bold text-center mt-3\"> Add New User</h1>\n\n    <div class=\"comapre_details comman_box mt-5 mb-5 \">\n        <form [formGroup]=\"addUser\">\n            <div class=\"row\">\n                <div class=\"col-sm-6\">\n                    <div class=\"form-group\">\n                        <label class=\"form-group\"\n                            [ngClass]=\"{'invalid-danger' : (submitted && f.name.errors)}\">Name</label>\n                        <input type=\"text\" formControlName='name' class=\"form-control\" placeholder=\"name\">\n                        <div *ngIf=\"submitted && f.name.errors\" class=\"invalid-feedback\">\n                            <div *ngIf=\"submitted && f.name.errors.required\">Name is required.</div>\n                        </div>\n                    </div>\n\n                    <div class=\"form-group\">\n                        <label class=\"form-group\"\n                            [ngClass]=\"{'invalid-danger' : (submitted && f.gender.errors)}\">Gender</label>\n                        <input type=\"text\" formControlName='gender' class=\"form-control\" placeholder=\"Gender\">\n                    </div>\n\n                    <div class=\"form-group\">\n                        <label class=\"form-group\"\n                            [ngClass]=\"{'invalid-danger' : (submitted && f.password.errors)}\">Password</label>\n                        <input type=\"password\" id='password' formControlName='password' class=\"form-control\"\n                            placeholder=\"password\" required>\n                        <div class=\"passauth\" *ngIf='!showpass' (click)='shownewPass()'><img\n                                src=\"assets/viewer.svg\" alt=\"\"></div>\n                        <div class=\"passauth\" *ngIf='showpass' (click)='shownewPass()'><img\n                                src=\"assets/viewer2.svg\" alt=\"\"></div>\n\n                        <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\n                            <div *ngIf=\"submitted && f.password.errors.required\">Password is required.</div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"col-sm-6\">\n\n\n                    <div class=\"form-group\">\n                        <label class=\"form-group\"\n                            [ngClass]=\"{'invalid-danger' : (submitted && f.about.errors)}\">About</label>\n                        <input type=\"text\" formControlName='about' class=\"form-control\" placeholder=\"About\">\n                    </div>\n\n                    <div class=\"form-group\">\n                        <label class=\"form-group\"\n                            [ngClass]=\"{'invalid-danger' : (submitted && f.email.errors)}\">Email</label>\n                        <input type=\"text\" formControlName='email' class=\"form-control\" placeholder=\"email\" required>\n                        <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback\">\n                            <div *ngIf=\"submitted && f.email.errors.required\">Email is required.</div>\n                            <div *ngIf=\"submitted && f.email.errors.email\">Email is not valid.</div>\n                        </div>\n                    </div>\n                    <div class=\"mb-1\"><button (click)='addBlock()' class=\"btn btn-primary\">Add\n                            Strength</button>\n                    </div>\n                    <div class=\"form-group\" formArrayName='strengths'\n                        *ngFor=\"let X of addUser['controls'].strengths['controls']; let ix=index\">\n                        <div class=\"\" [formGroupName]=\"ix\">\n                            <div class=\"d-flex cross\">\n                                <label class=\"form-group\"\n                                    [ngClass]=\"{'invalid-danger' : (submitted && X.controls.strength.errors)}\">Strength\n                                </label>\n                                <span class=\"\" (click)='removeStrength(ix)'>x</span>\n                            </div>\n\n                            <input type=\"text\" formControlName='strength' class=\"form-control\" placeholder=\"Strength\">\n                        </div>\n                    </div>\n\n\n                </div>\n\n            </div>\n        </form>\n\n    </div>\n    <div class=\"d-flex justify-content-center m-2\">\n        <div><button class=\"btn btn-primary m-2\" (click)=\"back()\">Back</button></div>\n        <div><button class=\"btn btn-primary m-2\" type=\"submit\" (click)=\"submit()\">{{buttonName}}</button></div>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { AdminRoutingModule } from './admin-routing.module';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { DemoMaterialModule } from '../material-module';\nimport { AddUserComponent } from './add-user/add-user.component';\n\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    DashboardComponent,\n    AddUserComponent\n  ],\n  imports: [\n    CommonModule,\n    AdminRoutingModule,\n    DemoMaterialModule,\n    FormsModule, ReactiveFormsModule\n  ]\n})\nexport class AdminModule { }\n","import { OnInit } from '@angular/core';\nimport { ServicesService } from 'src/app/service/services.service';\nimport { Component, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { Router } from '@angular/router';\n\nexport interface UserData {\n  id: string;\n  name: string;\n  about: string;\n  gender: string;\n}\n\n/**\n * @title Data table with sorting, pagination, and filtering.\n */\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\n\nexport class DashboardComponent implements OnInit {\n  displayedColumns: string[] = ['id', 'name', 'about', 'gender', 'strength', 'action'];\n  dataSource: MatTableDataSource<UserData>;\n  users = []\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n\n  constructor(private service: ServicesService, private router: Router) { }\n\n  ngOnInit() {\n    this.getAllUsers()\n  }\n\n  adduser() {\n    this.router.navigateByUrl('/admin/add-user')\n  }\n\n  editUser(id) {\n    this.router.navigateByUrl(`/admin/add-user/${id}`)\n  }\n\n  getAllUsers() {\n    this.service.GetReq('admin/getAllUsers').subscribe((data) => {\n      this.users = data['response']\n      this.users.map((val)=>{\n        val['allStrengths'] = []\n        if(val['strengths'] && val['strengths'].length > 0){\n          val['strengths'].map((data)=>{\n            console.log(data['strength']);\n            val['allStrengths'].push(data['strength'])\n          })\n        }\n      })\n      console.log(this.users);\n      \n      this.dataSource = new MatTableDataSource(this.users);\n\n      setTimeout(() => {\n        this.dataSource.paginator = this.paginator;\n        this.dataSource.sort = this.sort;\n      }, 100);\n    })\n  }\n\n  deleteUser(user_id, index) {\n    this.service.PostReq('admin/deleteUser', { user_id }).subscribe((data) => {\n      if (data['status_code'] == 200) {\n        this.service.toaster('success', data['message'])\n        this.users.splice(index, 1)\n        this.dataSource = new MatTableDataSource(this.users);\n\n        setTimeout(() => {\n          this.dataSource.paginator = this.paginator;\n          this.dataSource.sort = this.sort;\n        }, 100);\n      }\n    }, err => {\n      this.service.toaster('error', err.error.message)\n    })\n  }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n\n  logout() {\n    this.service.toaster('success', 'Successfully Logged Out !!')\n    localStorage.setItem('demoUser', null)\n    this.router.navigateByUrl('/')\n  }\n}\n\n\n\n","\n<div class=\"container mt-4\">\n  <h1 class=\"text-blue font-weight-bold\">Welcome Admin</h1>\n\n    <button class='btn btn-primary float-end' (click)='adduser()'>Add User</button>\n    <mat-form-field appearance=\"standard\">\n        <mat-label>Filter</mat-label>\n        <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"\" #input>\n    </mat-form-field>\n\n    <div class=\"container mat-elevation-z8 table-responsive\">\n        <table mat-table [dataSource]=\"dataSource\" matSort>\n\n            <ng-container matColumnDef=\"id\" class=\"p-2\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> ID </th>\n                <td mat-cell *matCellDef=\"let row\" class = \"id_column\"> {{row._id}} </td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"name\" class=\"p-2\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Name </th>\n                <td mat-cell *matCellDef=\"let row\"> {{row.name}} </td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"about\" class=\"p-2\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> About </th>\n                <td mat-cell *matCellDef=\"let row\"> {{row.about}}</td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"gender\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Gender </th>\n                <td mat-cell *matCellDef=\"let row\"> {{row.gender}} </td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"strength\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> Strengths </th>\n              <td mat-cell *matCellDef=\"let row\"> {{row.allStrengths}} </td>\n          </ng-container>\n\n            <ng-container matColumnDef=\"action\">\n                <th mat-header-cell *matHeaderCellDef class=\"wpx-100\"> Action </th>\n                <td mat-cell *matCellDef=\"let element\">\n                  <button  mat-icon-button [matMenuTriggerFor]=\"menu\" aria-label=\"Example icon-button with a menu\" class = \"tablebutton\">\n                  <!-- <mat-icon>more_vert</mat-icon> -->\n                  <i class=\"fa fa-ellipsis-v\" aria-hidden=\"true\"></i>\n                </button>\n                <mat-menu #menu=\"matMenu\">\n                  <button mat-menu-item (click)='editUser(element?._id)' >\n                    <span >Edit User</span>\n                  </button>\n                  <button mat-menu-item (click)='deleteUser(element?._id)' >\n                    <span >Delete User</span>\n                  </button>\n                </mat-menu>\n                </td>\n              </ng-container>\n\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n\n            <!-- Row shown when there is no matching data. -->\n            <tr class=\"mat-row\" *matNoDataRow>\n                <td class=\"mat-cell\" colspan=\"4\">No data found</td>\n            </tr>\n        </table>\n\n        <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\" showFirstLastButtons aria-label=\"Select page of users\">\n        </mat-paginator>\n    </div>\n\n    <button class=\"btn btn-primary mt-5\" (click)='logout()'> Log Out</button>\n</div>"],"sourceRoot":"webpack:///"}
