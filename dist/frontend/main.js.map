{"version":3,"sources":["./src/app/service/auth.interceptor.ts","./src/environments/environment.ts","./src/app/service/services.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/gaurds/gaurds.guard.ts","./src/app/app.module.ts","./src/app/material-module.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n\r\n    let token = (localStorage.getItem('demoUser'))\r\n    if (token) {\r\n      token = token\r\n    }\r\n    else {\r\n      token = ''\r\n    }\r\n    req = req.clone({\r\n      setHeaders: {\r\n        'Content-Type': 'application/json; charset=utf-8',\r\n        'Accept': 'application/json',\r\n        'Authorization': token,\r\n      },\r\n    });\r\n\r\n    return next.handle(req);\r\n  }\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  url : 'http://localhost:3000',\n  google_client_id: '1035828750539-n5f4mrbm0t5f4uauk4ot4i38qqulchu0.apps.googleusercontent.com',\n  facebook_client_id: '380792987168615'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { BehaviorSubject } from 'rxjs';\nimport { ToastrService } from \"ngx-toastr\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ServicesService {\n  \n  constructor(private http: HttpClient, private toastr: ToastrService) { }\n\n  headerString = new BehaviorSubject<String>('');  //  '' is the initial value.\n  userDetails = new BehaviorSubject<Object>(undefined);\n\n  toaster(type, msg, time = 1500) {\n    switch (type) {\n      case \"success\":\n        this.toastr.success(msg, \"SUCCESS\", { timeOut: time });\n        break;\n      case \"info\":\n        this.toastr.info(msg, \"INFORMATION\", { timeOut: time });\n        break;\n      case \"error\":\n        this.toastr.error(msg, \"ERROR\", { timeOut: time });\n        break;\n      case \"warn\":\n        this.toastr.warning(msg, \"WARNING\", { timeOut: time });\n        break;\n      case \"update\":\n        this.toastr.success(\"msg\", \"UPDATE\", { timeOut: time });\n      default:\n        this.toastr.success(msg, \"SUCCESS\", { timeOut: time });\n        break;\n    }\n  }\n\n  PostReq(name, body) {\n    return this.http.post(`${environment.url}/${name}`, body);\n  }\n\n  GetReq(name) {\n    return this.http.get(`${environment.url}/${name}`);\n  }\n}\n\n","import { Component } from '@angular/core';\nimport { NavigationStart, Router } from '@angular/router';\nimport { ServicesService } from './service/services.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'front-end-demo';\n  constructor(private router: Router, private service: ServicesService) {\n    router.events.forEach((event) => {\n      if (event instanceof NavigationStart) {\n        this.service.headerString.next(event['url'])\n        window.scroll(0, 0)\n      }\n    })\n  }\n}\n\n","<router-outlet></router-outlet>","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { ServicesService } from '../service/services.service';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class GaurdsGuard implements CanActivate {\n  constructor(private router: Router, private service: ServicesService) { }\n  async canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Promise<boolean | UrlTree> {\n    let value = await this.checking()\n    if (value) return true\n    else {\n      alert('You Are Not Allowed To Access This Page..')\n      this.router.navigateByUrl('/')\n      return false\n    }\n  }\n\n  verifyUser(token) {\n    return new Promise((resolve, reject) => {\n      this.service.PostReq('admin/verifyUser', { access_token: token }).subscribe((data) => {\n        if (data['status_code'] == 200) {\n          resolve(data['response'])\n        }\n        else {\n          resolve(false)\n        }\n      })\n    })\n  }\n\n  checking() {\n    return new Promise(async (resolve, reject) => {\n      this.service.headerString.subscribe(async (data) => {\n\n        if (data == '/') return false\n        let token = (localStorage.getItem('demoUser'));\n        if (token && token != 'null') {\n          let userSigned = await this.verifyUser(token)\n          if (userSigned) {\n            this.service.userDetails.next(userSigned)\n\n            if (userSigned['admin'] == 1 && data.includes('/admin')) resolve(true)\n            else if (userSigned['admin'] == 0 && data.includes('/user')) resolve(true)\n            else resolve(false)\n          }\n          else resolve(false)\n        }\n        else {\n          if (data.includes('signup')) return true\n          else {\n            resolve(false)\n          }\n        }\n      })\n    })\n\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { DemoMaterialModule } from './material-module';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations'\nimport { MAT_FORM_FIELD_DEFAULT_OPTIONS } from '@angular/material/form-field';\nimport { AuthInterceptor } from './service/auth.interceptor';\nimport { ToastrModule } from 'ngx-toastr';\nimport { SocialLoginModule, SocialAuthServiceConfig } from 'angularx-social-login';\nimport { environment } from 'src/environments/environment';\nimport {\n  GoogleLoginProvider,\n  FacebookLoginProvider\n} from 'angularx-social-login';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n  ],\n  imports: [\n    AppRoutingModule, BrowserModule, HttpClientModule, DemoMaterialModule, BrowserAnimationsModule, SocialLoginModule, ToastrModule.forRoot(),\n  ],\n  providers: [{ provide: MAT_FORM_FIELD_DEFAULT_OPTIONS, useValue: { appearance: 'fill' } }, {\n    provide: HTTP_INTERCEPTORS,\n    useClass: AuthInterceptor,\n    multi: true,\n  },\n  {\n    provide: 'SocialAuthServiceConfig',\n    useValue: {\n      autoLogin: false,\n      providers: [\n        {\n          id: GoogleLoginProvider.PROVIDER_ID,\n          provider: new GoogleLoginProvider(\n            environment.google_client_id\n          )\n        },\n        {\n          id: FacebookLoginProvider.PROVIDER_ID,\n          provider: new FacebookLoginProvider(environment.facebook_client_id)\n        }\n      ]\n    } as SocialAuthServiceConfig,\n  }],\n\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import {NgModule} from '@angular/core';\r\n// import {A11yModule} from '@angular/cdk/a11y';\r\n// import {ClipboardModule} from '@angular/cdk/clipboard';\r\n// import {DragDropModule} from '@angular/cdk/drag-drop';\r\n// import {PortalModule} from '@angular/cdk/portal';\r\n// import {ScrollingModule} from '@angular/cdk/scrolling';\r\n// import {CdkStepperModule} from '@angular/cdk/stepper';\r\n// import {CdkTableModule} from '@angular/cdk/table';\r\n// import {CdkTreeModule} from '@angular/cdk/tree';\r\n// import {MatAutocompleteModule} from '@angular/material/autocomplete';\r\n// import {MatBadgeModule} from '@angular/material/badge';\r\n// import {MatBottomSheetModule} from '@angular/material/bottom-sheet';\r\n// import {MatButtonModule} from '@angular/material/button';\r\n// import {MatButtonToggleModule} from '@angular/material/button-toggle';\r\n// import {MatCardModule} from '@angular/material/card';\r\nimport {MatCheckboxModule} from '@angular/material/checkbox';\r\n// import {MatChipsModule} from '@angular/material/chips';\r\n// import {MatStepperModule} from '@angular/material/stepper';\r\nimport {MatDatepickerModule} from '@angular/material/datepicker';\r\n// import {MatDialogModule} from '@angular/material/dialog';\r\n// import {MatDividerModule} from '@angular/material/divider';\r\nimport {MatExpansionModule} from '@angular/material/expansion';\r\n// import {MatGridListModule} from '@angular/material/grid-list';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatListModule} from '@angular/material/list';\r\nimport {MatMenuModule} from '@angular/material/menu';\r\nimport {MatNativeDateModule, MatRippleModule} from '@angular/material/core';\r\nimport {MatPaginatorModule} from '@angular/material/paginator';\r\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\r\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\r\nimport {MatRadioModule} from '@angular/material/radio';\r\nimport {MatSelectModule} from '@angular/material/select';\r\nimport {MatSidenavModule} from '@angular/material/sidenav';\r\nimport {MatSliderModule} from '@angular/material/slider';\r\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\r\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\r\nimport {MatSortModule} from '@angular/material/sort';\r\nimport {MatTableModule} from '@angular/material/table';\r\nimport {MatTabsModule} from '@angular/material/tabs';\r\nimport {MatToolbarModule} from '@angular/material/toolbar';\r\nimport {MatTooltipModule} from '@angular/material/tooltip';\r\nimport {MatTreeModule} from '@angular/material/tree';\r\nimport {OverlayModule} from '@angular/cdk/overlay';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\n\r\n\r\n@NgModule({\r\n  exports: [\r\n    // A11yModule,\r\n    // ClipboardModule,\r\n    // CdkStepperModule,\r\n    // CdkTableModule,\r\n    // CdkTreeModule,\r\n    // DragDropModule,\r\n    // MatAutocompleteModule,\r\n    // MatBadgeModule,\r\n    // MatBottomSheetModule,\r\n    // MatButtonModule,\r\n    // MatButtonToggleModule,\r\n    // MatCardModule,\r\n    MatCheckboxModule,\r\n    // MatChipsModule,\r\n    // MatStepperModule,\r\n    MatDatepickerModule,\r\n    // MatDialogModule,\r\n    // MatDividerModule,\r\n    MatExpansionModule,\r\n    // MatGridListModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatListModule,\r\n    MatMenuModule,\r\n    MatNativeDateModule,\r\n    MatPaginatorModule,\r\n    MatProgressBarModule,\r\n    MatProgressSpinnerModule,\r\n    MatRadioModule,\r\n    MatRippleModule,\r\n    MatSelectModule,\r\n    MatSidenavModule,\r\n    MatSliderModule,\r\n    MatSlideToggleModule,\r\n    MatSnackBarModule,\r\n    MatSortModule,\r\n    MatTableModule,\r\n    MatTabsModule,\r\n    MatToolbarModule,\r\n    MatTooltipModule,\r\n    MatTreeModule,\r\n    OverlayModule,\r\n    MatDialogModule,\r\n    // PortalModule,\r\n    // ScrollingModule,\r\n  ]\r\n})\r\nexport class DemoMaterialModule {}\r\n\r\n\r\n/**  Copyright 2021 Google LLC. All Rights Reserved.\r\n    Use of this source code is governed by an MIT-style license that\r\n    can be found in the LICENSE file at http://angular.io/license */","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule, PreloadAllModules } from '@angular/router';\r\nimport { GaurdsGuard } from './gaurds/gaurds.guard';\r\n\r\n\r\nconst routes: Routes = [\r\n  { path: '', loadChildren: () => import('./commonpages/commonpages.module').then(m => m.CommonpagesModule) },\r\n  { path: 'admin', loadChildren: () => import('./admin/admin.module').then(m => m.AdminModule),canActivate: [GaurdsGuard] },\r\n  { path: 'user', loadChildren: () => import('./user/user.module').then(m => m.UserModule),canActivate: [GaurdsGuard] },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes, {\r\n    preloadingStrategy: PreloadAllModules\r\n  })],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}
